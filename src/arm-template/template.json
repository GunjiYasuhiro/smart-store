{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "If you would like to specify the location of resources that is different from resource group, specify here. Or leave blank then the deployment use the resource group's location."
            }
        },
        "prefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix string should be within 2 characters."
            }
        },
        "suffix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Set like `-dev`. Or, if suffix is not needed, leave blank."
            }
        },
        "stockServiceGroupName": {
            "type": "string"
        },
        "itemServiceGroupName": {
            "type": "string"
        },
        "sqlServerName": {
            "type": "string"
        },
        "sqlServerAdminUserName": {
            "type": "string"
        },
        "sqlServerAdminPassword": {
            "type": "securestring"
        },
        "sqlDatabaseSkuName": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "S0",
                "S1",
                "S2",
                "S3",
                "S4",
                "S6",
                "S7",
                "S9",
                "S12",
                "P1",
                "P2",
                "P4",
                "P6",
                "P11",
                "P15"
            ]
        },
        "sqlDatabaseSkuTier": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ]
        },
        "sqlDatabaseName": {
            "type": "string"
        },
        "sqlDatabaseMaxDataSize": {
            "type": "int",
            "metadata": {
                "description": "Specify numeric amount of SQL Database Max Data Size without unit."
            }
        },
        "sqlDatabaseMaxDataSizeUnit": {
            "type": "string",
            "allowedValues": [
                "GB",
                "MB"
            ],
            "metadata": {
                "description": "Select the unit of SQL Database Max Data Size."
            }
        },
        "sqlDatabaseCollation": {
            "type": "string",
            "metadata": {
                "description": "example value: Japanese_CI_AS"
            }
        },
        "stockCommandApi": {
            "type": "string"
        },
        "stockCommandApiZipUrl": {
            "type": "string"
        },
        "stockQueryApi": {
            "type": "string"
        },
        "stockQueryApiZipUrl": {
            "type": "string"
        },
        "stockProcessor": {
            "type": "string"
        },
        "stockProcessorZipUrl": {
            "type": "string"
        },
        "itemMasterApi": {
            "type": "string"
        },
        "itemMasterApiZipUrl": {
            "type": "string"
        },
        "stockServiceAppServicePlan": {
            "type": "string"
        },
        "stockServiceAppServicePlanSkuName": {
            "type": "string",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1V2",
                "P2V2",
                "P3V2",
                "P1",
                "P2",
                "P3"
            ]
        },
        "itemServiceAppServicePlan": {
            "type": "string"
        },
        "itemServiceAppServicePlanSkuName": {
            "type": "string",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1V2",
                "P2V2",
                "P3V2",
                "P1",
                "P2",
                "P3"
            ]
        },
        "appInsightsLocation": {
            "type": "string"
        },
        "stockServiceAppInsights": {
            "type": "string"
        },
        "assetsName": {
            "type": "string"
        },
        "assetsContainerName": {
            "type": "string"
        },
        "storageAccountsSkuName": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_RAGRS",
                "Standard_GRS",
                "Premium_LRS",
                "Premium_ZRS"
            ]
        },
        "storageAccountsKind": {
            "type": "string",
            "allowedValues": [
                "Storage",
                "StorageV2"
            ]
        },
        "storageAccountsSuffix": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "bytesConversion": {
            "GB": 1073741824,
            "MB": 1048576
        },
        "delimiter": "-",

        "location": "[if(equals(parameters('location'), ''), resourceGroup().location, parameters('location'))]",

        "stockServiceCosmosDbName": "[concat(parameters('prefix'), variables('delimiter'), parameters('stockServiceGroupName'), parameters('suffix'))]",
        "itemServiceCosmosDbName": "[concat(parameters('prefix'), variables('delimiter'), parameters('itemServiceGroupName'), parameters('suffix'))]",

        "sqlServerName": "[concat(parameters('prefix'), variables('delimiter'), parameters('sqlServerName'), parameters('suffix'))]",
        "sqlDatabaseMaxSizeBytes": "[mul(parameters('sqlDatabaseMaxDataSize'), variables('bytesConversion')[parameters('sqlDatabaseMaxDataSizeUnit')])]",

        "stockServiceAppServicePlanName": "[concat(parameters('prefix'), variables('delimiter'), parameters('stockServiceAppServicePlan'), parameters('suffix'))]",
        "itemServiceAppServicePlanName": "[concat(parameters('prefix'), variables('delimiter'), parameters('itemServiceAppServicePlan'), parameters('suffix'))]",

        "stockCommandApiFunctionName": "[concat(parameters('prefix'), variables('delimiter'), parameters('stockCommandApi'), parameters('suffix'))]",
        "stockCommandApiStorageAccountsName": "[replace(concat(parameters('prefix'), parameters('stockCommandApi'), parameters('storageAccountsSuffix'), parameters('suffix')), variables('delimiter'), '')]",
        "stockCommandApiAppService": "stockServiceAppServicePlanName",

        "stockQueryApiFunctionName": "[concat(parameters('prefix'), variables('delimiter'), parameters('stockQueryApi'), parameters('suffix'))]",
        "stockQueryApiStorageAccountsName": "[replace(concat(parameters('prefix'), parameters('stockQueryApi'), parameters('storageAccountsSuffix'), parameters('suffix')), variables('delimiter'), '')]",
        "stockQueryApiAppService": "stockServiceAppServicePlanName",

        "stockProcessorFunctionName": "[concat(parameters('prefix'), variables('delimiter'), parameters('stockProcessor'), parameters('suffix'))]",
        "stockProcessorStorageAccountsName": "[replace(concat(parameters('prefix'), parameters('stockProcessor'), parameters('storageAccountsSuffix'), parameters('suffix')), variables('delimiter'), '')]",
        "stockProcessorAppService": "stockServiceAppServicePlanName",

        "itemMasterApiFunctionName": "[concat(parameters('prefix'), variables('delimiter'), parameters('itemMasterApi'), parameters('suffix'))]",
        "itemMasterApiStorageAccountsName": "[replace(concat(parameters('prefix'), parameters('itemMasterApi'), parameters('storageAccountsSuffix'), parameters('suffix')), variables('delimiter'), '')]",
        "itemMasterApiAppService": "itemServiceAppServicePlanName",

        "itemServiceAssetsStorageAccountsName": "[replace(concat(parameters('prefix'), parameters('itemServiceGroupName'), parameters('assetsName'), parameters('storageAccountsSuffix'), parameters('suffix')), variables('delimiter'), '')]",

        "stockServiceAppInsightsName": "[concat(parameters('prefix'), variables('delimiter'), parameters('stockServiceAppInsights'), parameters('suffix'))]"
    },
    "resources": [
        {
            "name": "[variables('stockServiceCosmosDbName')]",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2015-04-08",
            "location": "[variables('location')]",
            "tags": {
                "defaultExperience": "Core (SQL)"
            },
            "kind": "GlobalDocumentDB",
            "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                        "locationName": "[variables('location')]"
                    }
                ]
            }
        },
        {
            "name": "[variables('itemServiceCosmosDbName')]",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2015-04-08",
            "location": "[variables('location')]",
            "tags": {
                "defaultExperience": "Core (SQL)"
            },
            "kind": "GlobalDocumentDB",
            "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                        "locationName": "[variables('location')]"
                    }
                ]
            }
        },
        {
            "name": "[variables('sqlServerName')]",
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2015-05-01-preview",
            "location": "[variables('location')]",
            "properties": {
                "administratorLogin": "[parameters('sqlServerAdminUserName')]",
                "administratorLoginPassword": "[parameters('sqlServerAdminPassword')]"
            }
        },
        {
            "name": "[concat(variables('sqlServerName'), '/', parameters('sqlDatabaseName'))]",
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2017-10-01-preview",
            "location": "[variables('location')]",
            "sku": {
                "name": "[parameters('sqlDatabaseSkuName')]",
                "tier": "[parameters('sqlDatabaseSkuTier')]"
            },
            "properties": {
                "collation": "[parameters('sqlDatabaseCollation')]",
                "maxSizeBytes": "[variables('sqlDatabaseMaxSizeBytes')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
            ]
        },
        {
            "name": "[concat(variables('sqlServerName'), '/AllowAllWindowsAzureIps')]",
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
            ]
        },
        {
            "name": "[variables('stockServiceAppServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "location": "[variables('location')]",
            "sku": {
                "name": "[parameters('stockServiceAppServicePlanSkuName')]"
            },
            "properties": {}
        },
        {
            "name": "[variables('itemServiceAppServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "location": "[variables('location')]",
            "sku": {
                "name": "[parameters('itemServiceAppServicePlanSkuName')]"
            },
            "properties": {}
        },
        {
            "comments": "stock-command-api",
            "name": "[variables('stockCommandApiStorageAccountsName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "sku": {
                "name": "[parameters('storageAccountsSkuName')]"
            },
            "kind": "[parameters('storageAccountsKind')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "comments": "stock-command-api",
            "name": "[variables('stockCommandApiFunctionName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-02-01",
            "kind": "functionapp",
            "location": "[variables('location')]",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables(variables('stockCommandApiAppService')))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('stockServiceAppInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('stockCommandApiStorageAccountsName'), ';AccountKey=', listKeys(variables('stockCommandApiStorageAccountsName'),'2018-07-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "[parameters('stockCommandApiZipUrl')]"
                        },
                        {
                            "name": "CosmosDBConnection",
                            "value": "[concat('AccountEndpoint=', reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('stockServiceCosmosDbName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('stockServiceCosmosDbName')), '2015-04-08').primaryMasterKey)]"
                        }
                    ],
                    "alwaysOn": true,
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables(variables('stockCommandApiAppService')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('stockCommandApiStorageAccountsName'))]",
                "[resourceId('Microsoft.Insights/components', variables('stockServiceAppInsightsName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('stockServiceCosmosDbName'))]"
            ]
        },
        {
            "comments": "stock-query-api",
            "name": "[variables('stockQueryApiStorageAccountsName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "sku": {
                "name": "[parameters('storageAccountsSkuName')]"
            },
            "kind": "[parameters('storageAccountsKind')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "comments": "stock-query-api",
            "name": "[variables('stockQueryApiFunctionName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-02-01",
            "kind": "functionapp",
            "location": "[variables('location')]",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables(variables('stockQueryApiAppService')))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('stockServiceAppInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('stockQueryApiStorageAccountsName'), ';AccountKey=', listKeys(variables('stockQueryApiStorageAccountsName'),'2018-07-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "[parameters('stockQueryApiZipUrl')]"
                        },
                        {
                            "name": "SqlConnection",
                            "value": "[concat('Server=tcp:', reference(variables('sqlServerName')).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('sqlDatabaseName'), ';Persist Security Info=False;User ID=', reference(variables('sqlServerName')).administratorLogin, ';Password=', parameters('sqlServerAdminPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
                        }
                    ],
                    "alwaysOn": true,
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables(variables('stockQueryApiAppService')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('stockQueryApiStorageAccountsName'))]",
                "[resourceId('Microsoft.Insights/components', variables('stockServiceAppInsightsName'))]",
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), parameters('sqlDatabaseName'))]"
            ]
        },
        {
            "comments": "stock-processor",
            "name": "[variables('stockProcessorStorageAccountsName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "sku": {
                "name": "[parameters('storageAccountsSkuName')]"
            },
            "kind": "[parameters('storageAccountsKind')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "comments": "stock-processor",
            "name": "[variables('stockProcessorFunctionName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-02-01",
            "kind": "functionapp",
            "location": "[variables('location')]",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables(variables('stockProcessorAppService')))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('stockServiceAppInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('stockProcessorStorageAccountsName'), ';AccountKey=', listKeys(variables('stockProcessorStorageAccountsName'),'2018-07-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "[parameters('stockProcessorZipUrl')]"
                        },
                        {
                            "name": "CosmosDBConnection",
                            "value": "[concat('AccountEndpoint=', reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('stockServiceCosmosDbName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('stockServiceCosmosDbName')), '2015-04-08').primaryMasterKey)]"
                        },
                        {
                            "name": "SqlConnection",
                            "value": "[concat('Server=tcp:', reference(variables('sqlServerName')).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('sqlDatabaseName'), ';Persist Security Info=False;User ID=', reference(variables('sqlServerName')).administratorLogin, ';Password=', parameters('sqlServerAdminPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
                        }
                    ],
                    "alwaysOn": true,
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables(variables('stockProcessorAppService')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('stockProcessorStorageAccountsName'))]",
                "[resourceId('Microsoft.Insights/components', variables('stockServiceAppInsightsName'))]",
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), parameters('sqlDatabaseName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('stockServiceCosmosDbName'))]"
            ]
        },
        {
            "comments": "item-master-api",
            "name": "[variables('itemMasterApiStorageAccountsName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "sku": {
                "name": "[parameters('storageAccountsSkuName')]"
            },
            "kind": "[parameters('storageAccountsKind')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "comments": "item-master-api",
            "name": "[variables('itemMasterApiFunctionName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-02-01",
            "kind": "functionapp",
            "location": "[variables('location')]",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables(variables('itemMasterApiAppService')))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('itemMasterApiStorageAccountsName'), ';AccountKey=', listKeys(variables('itemMasterApiStorageAccountsName'),'2018-07-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "[parameters('itemMasterApiZipUrl')]"
                        },
                        {
                            "name": "CosmosDBConnection",
                            "value": "[concat('AccountEndpoint=', reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('itemServiceCosmosDbName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('itemServiceCosmosDbName')), '2015-04-08').primaryMasterKey)]"
                        }
                    ],
                    "alwaysOn": true,
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables(variables('itemMasterApiAppService')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('itemMasterApiStorageAccountsName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('itemServiceCosmosDbName'))]"
            ]
        },
        {
            "comments": "item-service",
            "name": "[variables('itemServiceAssetsStorageAccountsName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "sku": {
                "name": "[parameters('storageAccountsSkuName')]"
            },
            "kind": "[parameters('storageAccountsKind')]",
            "location": "[parameters('location')]",
            "properties": {}
        },
        {
            "comments": "item-service",
            "name": "[concat(variables('itemServiceAssetsStorageAccountsName'), '/default/', parameters('assetsContainerName'))]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2018-07-01",
            "properties": {
              "publicAccess": "Container"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('itemServiceAssetsStorageAccountsName'))]"
            ]
        },
        {
            "comments": "stock-service",
            "name": "[variables('stockServiceAppInsightsName')]",
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "location": "[parameters('appInsightsLocation')]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('stockProcessorFunctionName'))]": "Resource",
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('stockCommandApiFunctionName'))]": "Resource",
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('stockQueryApiFunctionName'))]": "Resource"
            },
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        }
    ]
}